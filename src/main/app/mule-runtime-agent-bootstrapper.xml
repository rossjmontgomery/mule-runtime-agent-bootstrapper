<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:oauth2="http://www.mulesoft.org/schema/mule/oauth2" xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:context="http://www.springframework.org/schema/context" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/oauth2 http://www.mulesoft.org/schema/mule/oauth2/current/mule-oauth2.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <apikit:config name="apiConfig" raml="api.raml" consoleEnabled="false" doc:name="Router"/>
    <context:property-placeholder location="api.properties" />
    <http:request-config name="Anypoint_Platform_Login" protocol="HTTPS" host="anypoint.mulesoft.com" port="443" basePath="/accounts" doc:name="HTTP Request Configuration">
        <tls:context>
            <tls:trust-store path="${security.truststore.path}" password="${security.truststore.password}" type="jks"/>
        </tls:context>
        <http:raml-api-configuration location="anypoint-access-management-api/api.raml"/>
    </http:request-config>
    <http:request-config name="Anypoint_Runtime_Manager_API" protocol="HTTPS" doc:name="HTTP Request Configuration" basePath="/hybrid/api/v1" host="anypoint.mulesoft.com" port="443">
        <tls:context>
            <tls:trust-store path="${security.truststore.path}" password="${security.truststore.password}" type="jks"/>
        </tls:context>
        <http:raml-api-configuration location="Anypoint-Runtime-Manager-v1.5/api.raml"/>
    </http:request-config>
    <http:request-config name="Anypoint_Platform_API" protocol="HTTPS" host="anypoint.mulesoft.com" port="443" basePath="/apiplatform/repository/v2" doc:name="HTTP Request Configuration">
        <tls:context>
            <tls:trust-store path="${security.truststore.path}" password="${security.truststore.password}" type="jks"/>
        </tls:context>
<!--         <oauth2:authorization-code-grant-type clientId="" clientSecret=""> -->
<!--             <oauth2:authorization-request authorizationUrl="https://anypoint.mulesoft.com/accounts/oauth2/authorize" localAuthorizationUrl=""/> -->
<!--             <oauth2:token-request tokenUrl="https://anypoint.mulesoft.com/accounts/oauth2/token"/> -->
<!--         </oauth2:authorization-code-grant-type> -->
        <http:raml-api-configuration location="API_Platform-v2.1.0/api.raml"/>
    </http:request-config>
    <sub-flow name="get-server-registration-token-subflow">
        <http:request config-ref="Anypoint_Runtime_Manager_API" path="/servers/registrationToken" method="GET" doc:name="get server registration token">
            <http:request-builder>
                <http:header headerName="X-ANYPNT-ENV-ID" value="#[sessionVars['environmentId']]"/>
                <http:header headerName="X-ANYPNT-ORG-ID" value="#[sessionVars['organizationId']]"/>
                <http:header headerName="Authorization" value="#['Bearer ' + sessionVars['accessToken']]"/>
            </http:request-builder>
        </http:request>
        <flow-ref name="transform-json-to-hashmap-subflow" doc:name="transform-json-to-hashmap-subflow"/>
        <set-payload value="#[payload.data]" doc:name="store registration token in payload"/>
        <logger message="#['registration token = ' + payload]" level="INFO" doc:name="display registration token"/>
    </sub-flow>
    <sub-flow name="unregister-the-server-subflow">
        <http:request config-ref="Anypoint_Runtime_Manager_API" path="/servers/{serverId}" method="DELETE" doc:name="delete the server">
            <http:request-builder>
                <http:uri-param paramName="serverId" value="#[payload.id]"/>
                <http:header headerName="X-ANYPNT-ENV-ID" value="#[sessionVars['environmentId']]"/>
                <http:header headerName="X-ANYPNT-ORG-ID" value="#[sessionVars['organizationId']]"/>
                <http:header headerName="Authorization" value="#['Bearer ' + sessionVars['accessToken']]"/>
            </http:request-builder>
            <http:success-status-code-validator values="204"/>
        </http:request>
    </sub-flow>
    <flow name="main-flow">
        <poll doc:name="initiate runtime agent bootstrap process">
            <fixed-frequency-scheduler frequency="1000000000" timeUnit="DAYS"/>
            <component class="uk.co.simplyhealth.RuntimeAgentConfigValidationComponent" doc:name="check for existence of Runtime Agent configuration files"/>
        </poll>
        <logger message="#['runtime agent config exists: ' + payload]" level="INFO" doc:name="Runtime Agent Config Exists?"/>
        <choice doc:name="Is the Runtime Agent already configured?">
            <when expression="#[payload == true]">
                <component class="uk.co.simplyhealth.UndeploymentComponent" doc:name="undeploy the bootstrapper application"/>
            </when>
            <otherwise>
                <flow-ref name="configure-runtime-agent-subflow" doc:name="configure-runtime-agent-subflow"/>
            </otherwise>
        </choice>

    </flow>
    <sub-flow name="configure-runtime-agent-subflow">
        <flow-ref name="login-to-anypoint-platform-subflow" doc:name="login-to-anypoint-platform-subflow"/>
        <flow-ref name="get-active-organizationId-subflow" doc:name="get-active-organizationId-subflow"/>
        <flow-ref name="get-environment-id-subflow" doc:name="get-environment-id-subflow" doc:description="Retrieve the Environment ID of the environment (DEV, PROD, etc) where the server is to be registered."/>
        <flow-ref name="get-server-info-subflow" doc:name="get-server-info-subflow"/>
        <choice doc:name="Is the server already registered with the Runtime Manager?">
            <when expression="#[message.payload != null]">
                <logger message="SERVER IS ALREADY REGISTERED" level="INFO" doc:name="Server is already registered"/>
                <flow-ref name="unregister-the-server-subflow" doc:name="unregister-the-server-subflow"/>
            </when>
            <otherwise>
                <logger message="server is not already registered" level="INFO" doc:name="server is not already registered"/>
            </otherwise>
        </choice>
        <flow-ref name="get-server-registration-token-subflow" doc:name="get-server-registration-token-subflow"/>
        <component class="uk.co.simplyhealth.ServerRegistrationComponent" doc:name="register the server"/>
        <component class="uk.co.simplyhealth.ServerRestartComponent" doc:name="restart the server"/>
    </sub-flow>
    <sub-flow name="get-server-info-subflow">
        <http:request config-ref="Anypoint_Runtime_Manager_API" path="/servers" method="GET" doc:name="get list of servers for current environment">
            <http:request-builder>
                <http:header headerName="X-ANYPNT-ENV-ID" value="#[sessionVars['environmentId']]"/>
                <http:header headerName="X-ANYPNT-ORG-ID" value="#[sessionVars['organizationId']]"/>
                <http:header headerName="Authorization" value="#['Bearer ' + sessionVars['accessToken']]"/>
            </http:request-builder>
        </http:request>
        <flow-ref name="transform-json-to-hashmap-subflow" doc:name="transform-json-to-hashmap-subflow"/>
        <custom-transformer  class="uk.co.simplyhealth.ExtractServerInfoFromServerList" doc:name="extract server info from server list"/>
        <logger message="#['server info = ' + payload]" level="INFO" doc:name="log server info"/>
    </sub-flow>
    <sub-flow name="get-environment-id-subflow">
        <http:request config-ref="Anypoint_Platform_API" path="/organizations/{organizationId}/environments" method="GET" doc:name="get list of environments for current organization">
            <http:request-builder>
                <http:uri-param paramName="organizationId" value="#[sessionVars['organizationId']]"/>
                <http:header headerName="Authorization" value="#['Bearer ' + sessionVars['accessToken']]"/>
            </http:request-builder>
        </http:request>
        <flow-ref name="transform-json-to-arraylist-subflow" doc:name="transform-json-to-arraylist-subflow"/>
        <custom-transformer returnClass="java.lang.String" class="uk.co.simplyhealth.ExtractEnvironmentIdFromJsonResponse" doc:name="extract development id"/>
        <set-session-variable variableName="environmentId" value="#[payload]" doc:name="store environment id in session"/>
        <logger message="#['environment id = ' + sessionVars['environmentId']]" level="INFO" doc:name="display environment id"/>
    </sub-flow>
    <sub-flow name="login-to-anypoint-platform-subflow">
        <set-payload value="{&quot;username&quot;: &quot;${platform.username}&quot;, &quot;password&quot;: &quot;${platform.password}&quot;}" doc:name="set username and password as JSON payload"/>
        <logger message="payload = #[payload]" level="INFO" doc:name="Logger"/>

        <set-property propertyName="Content-Type" value="application/json" doc:name="set Content-Type"/>
        <http:request config-ref="Anypoint_Platform_Login" path="/login" method="POST" doc:name="Login to Anypoint Platform"/>
        <flow-ref name="transform-json-to-hashmap-subflow" doc:name="transform-json-to-hashmap-subflow"/>
        <expression-transformer returnClass="java.lang.String" mimeType="application/json" expression="#[payload.access_token]" doc:name="extract access_token"/>
        <set-session-variable variableName="accessToken" value="#[payload]" doc:name="store access_token in session"/>
        <logger message="#[sessionVars['accessToken']]" level="INFO" doc:name="display access_token"/>
    </sub-flow>
    <sub-flow name="transform-json-to-hashmap-subflow">
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="#[payload]" level="INFO" doc:name="display http response"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" mimeType="application/json" doc:name="JSON to HashMap"/>
    </sub-flow>
    <apikit:mapping-exception-strategy name="apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
    <sub-flow name="transform-json-to-arraylist-subflow">
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="#[payload]" level="INFO" doc:name="display http response"/>
        <json:json-to-object-transformer returnClass="java.util.ArrayList" mimeType="application/json" doc:name="JSON to ArrayList"/>
    </sub-flow>
    <sub-flow name="get-active-organizationId-subflow" doc:description="call /organizations/active">
        <set-property propertyName="Authorization" value="#['Bearer ' + sessionVars['accessToken']]" doc:name="set authorization header"/>
        <http:request config-ref="Anypoint_Platform_API" path="/organizations/active" method="GET" doc:name="get active organisationId"/>
        <flow-ref name="transform-json-to-hashmap-subflow" doc:name="transform-json-to-hashmap-subflow"/>
        <set-session-variable variableName="organizationId" value="#[payload.id]" doc:name="store organizationId in session"/>
    </sub-flow>
</mule>
