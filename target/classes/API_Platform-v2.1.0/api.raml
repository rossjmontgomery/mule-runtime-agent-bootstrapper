#%RAML 1.0
title:     API Platform V2 API
mediaType: application/json
baseUri:   https://anypoint.mulesoft.com/apiplatform/repository/v2

schemas:
  addRootRaml:          !include schemas/add-root-raml.json
  newAlert:             !include schemas/alert.json
  newApi:               !include schemas/new-api.json
  newApplication:       !include schemas/empty.json
  newContract:          !include schemas/empty.json
  newFile:              !include schemas/empty.json
  newOrganization:      !include schemas/new-organization.json
  newPage:              !include schemas/empty.json
  newPolicy:            !include schemas/empty.json
  newPortal:            !include schemas/new-portal.json
  newTier:              !include schemas/new-tier.json
  newVersion:           !include schemas/new-version.json
  page:                 !include schemas/page.json
  pages:                !include schemas/pages.json
  patchContract:        !include schemas/patch-contract.json
  policy:               !include schemas/policy.json
  portal:               !include schemas/portal.json
  portals:              !include schemas/portals.json
  updateAlert:          !include schemas/alert-update.json
  updateApi:            !include schemas/update-api.json
  updateApplication:    !include schemas/empty.json
  updateContractStatus: !include schemas/empty.json
  updateDefinition:     !include schemas/empty.json
  updateOrganization:   !include schemas/update-organization.json
  updateVersion:        !include schemas/update-version.json
  
resourceTypes:
  alertItem:            !include resource-types/alert-item.yaml
  apiExtendedSearch:    !include resource-types/api-extended-search.yaml
  apiSearch:            !include resource-types/api-search.yaml
  baseCollection:       !include resource-types/empty.yaml
  collection:
    type: <<baseType>>
    get:
      description: Returns a list of <<resourcePathName>>
      responses:
        200:
          description:
          body:
            application/json:
    post:
      description: Creates a new <<resourcePathName|!singularize>>
      body:
        application/json:
          #schema: new<<resourcePathName | !singularize | !uppercamelcase>>
      responses:
        201:
          description: The new <<resourcePathName|!singularize>> has been successfully created
          headers:
            Location:
              description: uri of new resource
              type: string
              required: true
  collectionItem:
    description: An instance of a single <<resourcePathName|!singularize>>
    get:
      description: Returns an instance of a single <<resourcePathName|!singularize>>
      responses:
        200:
          body:
            application/json:
    
    put:
      description: Updates a single <<resourcePathName|!singularize|!uppercamelcase>>
      body:
        application/json:
          #schema: update<<resourcePathName|!singularize|!uppercamelcase>>
      responses:
        200:
          body:
            application/json:
    
    patch:
      description: Patches a single <<resourcePathName|!singularize>>
      body:
        application/json:
          #schema: update<<resourcePathName|!singularize|!uppercamelcase>>
      responses:
        200:
          body:
            application/json:
    
    delete:
      description: Deletes the instance of the <<resourcePathName|!singularize>> specified
      responses:
        204:
          description: The <<resourcePathName|!singularize>> has been deleted successfully
  policyCollectionItem:
    description: An instance of a single <<resourcePathName|!singularize>>
    put:
      body:
        application/json:
          #schema: new<<resourcePathName|!singularize|!uppercamelcase>>
      description: Updates a single <<resourcePathName|!singularize>>
      responses:
        200:
          body:
            application/json:
              #schema: <<resourcePathName|!singularize>>
    patch:
      body:
        application/json:
          #schema: new<<resourcePathName|!singularize|!uppercamelcase>>
      description: Patches a single <<resourcePathName|!singularize>>
      responses:
        200:
          body:
            application/json:
              #schema: <<resourcePathName|!singularize>>
    
    delete:
      description: Deletes the instance of the <<resourcePathName|!singularize>> specified
      responses:
        204:
          description: The <<resourcePathName|!singularize>> has been deleted successfully
  
  writeOnlyCollection:
    post:
      description: Creates a new <<resourcePathName|!singularize>>
      body:
        application/json:
          #schema: new<<resourcePathName | !singularize | !uppercamelcase>>
      responses:
        201:
          description: The new <<resourcePathName|!singularize>> has been successfully created
          headers:
            Location:
              description: uri of new resource
              type: string
              required: true
traits:
  api:          !include traits/api.yaml
  apiList:      !include traits/api-list.yaml
  clientErrors: !include traits/client-errors.yaml
  searchable:   !include traits/searchable.yaml
  serverErrors: !include traits/server-errors.yaml

securitySchemes:
  oauth_2_0: !include security/oauth_2_0.yaml

securedBy: [ oauth_2_0 ]

/public:
  /apis:
    description: |
      Search through all public APIs within the Anypoint Platform.
    securedBy: [ null ]
    type:      apiSearch
    get:
      responses:
        200:
          body:
            application/json:
              example: !include examples/public_apis_get_response.json

/organizations:
  description: Organizations are the container entity for all API Portal-related resources.
  /active:
    get:
      description: Get the active organization.
      responses:
        200:
          body:
            example: !include examples/organizations_active_get_response.json

  /{organizationId}:
    description: The organization's data.
    uriParameters:
      organizationId:
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        required: true
    get:
      description: Get the organization.
      queryParameters:
        extended:
          description: Obtain extended information from the organization.
          type: boolean
        resolveTheme:
          description: Resolves the theme inheritance.
          type: boolean
      responses:
        200:
          description: Successful.
          body:
            example: !include examples/organizations_organizationId_get_response.json
        400:
          description: Bad Request.
        500:
          description: An unknown error occurred.
    put:
      description: Update the organization.
      body:
        schema: updateOrganization
        example: !include examples/organizations_organizationId_put_request_response.json
      responses:
        200:
          description: Successful.
        400:
          description: Bad Request.
        500:
          description: An unknown error occurred.
    delete:
      description: Delete the organization.
      responses:
        204:
          description: Organization deleted.

    /permissions:
      description: A list of available permissions.
      get:
        responses:
          200:
            body:
              example: !include examples/organizations_organizationId_permissions_get_response.json

    /alerts:
      type:  { collection : { "baseType": alertItem } }
      get:
        description: Gets a collection of alerts.
        is: [ searchable ]
        queryParameters:
          apiId:
            type: string
          apiVersionId:
            type: string
          alertId:
            type: string
          active:
            type: boolean
          environmentId:
           type: string
          lastModifiedSince:
            type: integer
            minimum: 0
            description: |
              Return items which have been modified since the specified timestamp
            example: 1457128095098
          policyId:
            type: string
          severity:
            type: string
          type:
            type: string
          tierId:
            type: string
        responses:
          200:
            description: Successfully retrieved alert definitions.
            body:
              application/json:
                example: !include examples/alert-search.json

    /environments:
      description: A list of available environments to deploy to.
      get:
        responses:
          200:
            body:
              example: !include examples/organizations_organizationId_environments_get_response.json

      /{environmentId}/apis/{apiId}/versions/{apiVersionId}/alerts:
        type:  { collection : { "baseType": alertItem } }
        uriParameters:
          environmentId:
            type: string
          apiId:
            type: string
          apiVersionId:
            type: string
        post:
          body:
            application/json:
              #schema: newAlert
          responses:
            200:
              description: Successfully created alert definition.
        get:
          responses:
            200:
              description: Successfully retrieved an API Version's alert definitions.

        /{alertId}:
          uriParameters:
            alertId:
              type: string
          type: alertItem
          get:
            responses:
              200:
                description: Successfully retrieved alert definition.
                body:
                  application/json:
                    #schema: updateAlert
          patch:
            body:
              application/json:
                #schema: updateAlert
            responses:
              200:
                description: Successfully updated alert definition.
                body:
                  application/json:
                    example: !include examples/request-count-alert.json

          delete:
            description: Deletes the specified alert definition.
            responses:
              204:
                description: Successfully deleted alert definition.

    /theme:
      put:
        description: Update the organization theme.
        body:
          multipart/form-data:
            example: !include examples/organizations_organizationId_theme_put_request.json
        responses:
          200:
            body:
              application/json:
                example: !include examples/organizations_organizationId_theme_default_get_response.json

      /default:
        get:
          description: Get the default theme for an organization.
          responses:
            200:
              body:
                example: !include examples/organizations_organizationId_theme_default_get_response.json

    /portals/terms:
      get:
        description: Gets portal terms set for the organization.
        responses:
          200:
            body:
              example: !include examples/organizations_organizationId_portals_terms_get_response.json
      put:
        description: Create portal terms for the organization.
        body:
          example: !include examples/organizations_organizationId_portals_terms_put_request.json
        responses:
          200:
            body:
              example: !include examples/organizations_organizationId_portals_terms_put_response.json
      delete:
        description: Deletes portal terms for the organization.
        responses:
          204:

    /apis:
      description: A collection of APIs.
      type:
        collection:
          baseType: apiSearch
      get:
        responses:
          200:
            body:
              application/json:
                example: !include examples/organizations_organizationId_apis_get_response.json
      post:
        description: Creates an API.
        body:
          application/json:
            example: !include examples/organizations_organizationId_apis_post_request.json
          multipart/form-data:
        responses:
          201:
            body:
              application/json:
                example: !include examples/organizations_organizationId_apis_post_response.json

      /by-name:
        get:
          description: |
            Returns a single API that matches the passed-in API name.
            Returns null if no match is found.
          queryParameters:
            apiName:
              type: string
              required: true
          responses:
            200:
              body:
                example: !include examples/organizations_organizationId_apis_by_name_get_response.json

      /versions/by-endpoint:
        get:
          description: Returns a list of API versions for a given list of endpoints.
          queryParameters:
            uris:
              type: string
              required: true
          responses:
            200:
              body:
                example: !include examples/organizations_organizationId_apis_versions_by_endpoint_get_response.json

      /versions/by-name:
        get:
          description: |
            Returns a single API that matches the passed-in API name
            and API version name. Returns null if no match is found.
          queryParameters:
            apiName:
              type: string
              required: true
            versionName:
              type: string
              required: true
          responses:
            200:
              body:
                example: !include examples/organizations_organizationId_apis_versions_by_name_get_response.json

      /versions/tiers:
        get:
          description: |
            Returns permitted SLA tiers within an organization.
            It means every SLA tier that belongs to API version requesting user has access to.
          responses:
            200:
              body:
                example: !include examples/organizations_organizationId_apis_versions_tiers_get_response.json

      /versions/contracts/applications:
        get:
          description: |
            Returns permitted applications within an organization.
            It means every applications that has a contract with an API version requesting user has access to.
          responses:
            200:
              body:
                example: !include examples/organizations_organizationId_apis_versions_contracts_applications_get_response.json

      /{apiId}:
        description: An API.
        type: collectionItem
        uriParameters:
          apiId:
            type: integer
            minimum: 1
            maximum: 2147483647
        get:
          description: Returns an API and all its versions.
          responses:
            200:
              body:
                application/json:
                  example: !include examples/organizations_organizationId_apis_apiId_get_response.json
        patch:
          body:
            application/json:
              example: !include examples/organizations_organizationId_apis_apiId_patch_request.json
          responses:
            200:
              body:
                application/json:
                  example: !include examples/organizations_organizationId_apis_apiId_patch_response.json

        /portals:
          description: A collection of API portals.
          get:
            description: Returns a collection of API portals.
            responses:
              200:
                body:
                  example: !include examples/organizations_organizationId_apis_apiId_portals_get_response.json

        /permissions:
          post:
            description: Grant a user view access to this API.
            body:
              application/json:
                example: !include examples/organizations_organizationId_apis_apiId_permissions_patch_request.json
            responses:
              201:

        /versions:
          description: A collection of API versions.
          type: writeOnlyCollection
          post:
            description: Creates an API version.
            body:
              application/json:
                example: !include examples/organizations_organizationId_apis_apiId_versions_post_request.json
              multipart/form-data:
            responses:
              201:
                body:
                  example: !include examples/organizations_organizationId_apis_apiId_versions_post_response.json

          /{apiVersionId}:
            description: An API version.
            type: collectionItem
            uriParameters:
              apiVersionId:
                type: integer
                minimum: 1
                maximum: 2147483647
            get:
              description: Returns an API version.
              responses:
                200:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_get_response.json
            put:
              body:
                application/json:
                  example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_put_patch_request.json
              responses:
                200:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_put_patch_response.json
            patch:
              body:
                application/json:
                  example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_put_patch_request.json
              responses:
                200:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_put_patch_response.json

            /export:
              get:
                description: Exports an API Version.
                queryParameters:
                  files:
                    type: boolean
                    description: Include definition files.
                  slaTiers:
                    type: boolean
                    description: Include SLA tiers.
                  endpoint:
                    type: boolean
                    description: Include endpoint definition.
                  portal:
                    type: boolean
                    description: Include portal.
                  portalAttachments:
                    type: boolean
                    description: Include portal attachments.
                  portalFiles:
                    type: boolean
                    description: Include portal images.
                responses:
                  200:
                    body:
                      application/zip:

            /users:
              description: Proxy for core services that return users, with exception of API OWNER role and the current user.
              get:
                description: Search for users.
                queryParameters:
                  search:
                    type: string
                    required: true
                  includeCurrent:
                    type: boolean
                    description: Whether to include the currently logged-in user in the search results or not.
                responses:
                  200:
                    body:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_users_get_response.json

              /by-roles:
                description: |
                  Proxy for core services that return users for a given set of roles and context parameters.
                  Users are returned with an extra "roles" property containing the core services id of the subset of passed-in roles of which they are a member.
                get:
                  description: Search for users who match a specific set of roles.
                  queryParameters:
                    apiVersionOwner:
                      description: Context params for the API VERSION OWNER role.
                      type: string
                      required: true
                    portalAccess:
                      description: Context params for the PORTAL ACCESS role.
                      type: string
                      required: true
                  responses:
                    200:
                      body:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_users_by_roles_get_response.json

              /owners:
                get:
                  description: Return all owners of an API version.
                  responses:
                    200:
                      body:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_users_owner_get_response.json

            /permissions:
              post:
                description: Grant a user admin access to this API version.
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_permissions_post_request.json
                responses:
                  201:
              delete:
                description: Revoke a user's admin access to this API version.
                queryParameters:
                  userId:
                    type: string
                    required: true
                responses:
                  204:

            /portal:
              get:
                description: Obtain the portal associated with the API version.
                queryParameters:
                  resolveTheme:
                    description: Resolves theme inheritance.
                    type: boolean
                responses:
                  200:
                    body:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_get_response.json
              post:
                description: Create a portal and associates it with an API version.
                body:
                  application/json:
                    example:  |
                        {}
                responses:
                  201:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_post_response.json

              patch:
                description: Create a portal and associates it with an API version.
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_patch_request.json
                responses:
                  200:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_patch_response.json

              /permissions:
                post:
                  description: Grant a user view access to this portal.
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_permissions_post_request.json
                  responses:
                    201:
                delete:
                  description: Revoke a user's view access to portal.
                  queryParameters:
                    userId:
                      type: string
                      required: true
                  responses:
                    204:

              /pages:
                description: A collection of portal pages.
                type: writeOnlyCollection
                post:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_pages_post_request.json
                  responses:
                    201:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_pages_post_response.json
                put:
                  responses:
                    200:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_pages_put_request_response.json

                /{pageId}:
                  uriParameters:
                    pageId:
                      type: integer
                      minimum: 1
                      maximum: 2147483647
                  put:
                    description: Update an existing page.
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_pages_put_request_response.json
                    responses:
                      200:
                        body:
                          application/json:
                            example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_pages_put_request_response.json

                  delete:
                    responses:
                      204:

                  /widgets:
                    get:
                      description: Returns all content widgets of a page.
                      responses:
                        200:
                          body:
                            application/json:
                              example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_pages_widgets_get_response.json
                    patch:
                      description: Updates the collection of widgets.
                      body:
                          application/json:
                            example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_pages_widgets_patch_request.json
                      responses:
                        200:
                          body:
                            application/json:
                              example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_pages_widgets_patch_response.json

              /theme:
                put:
                  description: Update the portal theme.
                  body:
                    multipart/form-data:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_theme_put_request.json
                  responses:
                    200:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_theme_put_response.json

              /files:
                description: A collection of portal files.
                type: writeOnlyCollection
                post:
                  description: Upload an api portal file.
                  body:
                    multipart/form-data:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_files_post_request.json
                  responses:
                    201:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_portal_files_post_response.json

                /{fileId}:
                  get:
                    description: Gets the portal file.
                    responses:
                      200:
                        description: Portal file stream.
                  delete:
                    description: Removes the Portal file.
                    responses:
                      204:
                        description: Successful portal file deletion.

                  /{fileName}:
                    get:
                      description: Same as parent get but allows to set a file name in the content-disposition header for downloading in a browser environment.
                      responses:
                        200:

            /addRootRaml:
              post:
                description: Adds the root RAML for this API version.
                body:
                  application/json:
                    schema: addRootRaml
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_addRootRaml_post_request.json
                responses:
                  201:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_addRootRaml_post_response.json

            /definition:
              description: The fully resolved RAML spec for this version of the API.
              get:
                description: Gets the RAML SPEC.
                responses:
                  200:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_definition_get_response.json

            /endpoint:
              description: The endpoint associated with the API version.
              get:
                description: Returns the endpoint associated with the API version.
                responses:
                  200:
                    description: Successful.
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_endpoint_get_response.json
                  400:
                    description: Bad request.
                  404:
                    description: No endpoint found for this API version.
              post:
                description: Creates an endpoint for the API version.
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_endpoint_post_request.json
                responses:
                  201:
                    description: The endpoint has been created.
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_endpoint_post_response.json
                  400:
                    description: Bad request.
                  409:
                    description: The endpoint URL already exists.
              put:
                description: Updates the endpoint associated with the API version.
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_endpoint_put_patch_request.json
                responses:
                  200:
                    description: The endpoint has been updated.
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_endpoint_put_patch_response.json

                  409:
                    description: The endpoint URL already exists.
              patch:
                description: Updates the endpoint associated with the API version.
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_endpoint_put_patch_request.json
                responses:
                  200:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_endpoint_put_patch_response.json
              delete:
                description: Deletes the endpoint associated with the API version.
                responses:
                  204:
                    description: The endpoint has been succesfully deleted.

              /active:
                post:
                  description: Records activity for an API version.
                  body:
                    application/json:
                      example:  |
                        {}
                  responses:
                    201:
                      description: The API version activity has been recorded.
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_endpoint_active_post_response.json

            /files:
              description: A collection of API version RAML files and directories.
              type:
                collection:
                  baseType: baseCollection
              get:
                responses:
                  200:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_files_get_response.json
              post:
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_files_post_request.json
                responses:
                  201:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_files_post_put_response.json

              /export:
                get:
                  description: Exports all files in the filesystem as a ZIP file.
                  responses:
                    200:
                      body:
                        application/zip:

              /{apiVersionFileId}:
                description: An API version RAML file (or directory).
                uriParameters:
                  apiVersionFileId:
                    type: integer
                    minimum: 1
                    maximum: 2147483647
                get:
                  description: Obtain a RAML file (or directory).
                  responses:
                    200:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_files_fileId_get_response.json
                put:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_files_fileId_put_request.json
                  responses:
                    200:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_files_post_put_response.json
                delete:
                  responses:
                    204:

            /policies:
              description: A collection of API version policies.
              type:
                collection:
                  baseType: baseCollection
              get:
                queryParameters:
                  standalone:
                    type: boolean
                  version:
                    type: string
                    default: v1
                    pattern: ^v\d+$
                  fullInfo:
                    type: boolean
                    default: true
                responses:
                  200:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_policies_get_response.json
              post:
                description: Use `pointcutData` for applying a Resource Level policy. The field is nullable, so it can be left `null` for applying the policy to the entire API version.
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_policies_post_patch_request.json
                responses:
                  201:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_policies_post_patch_response.json
              patch:
                description: Updates multiple policies. Currently, only updates in order field are supported.
                body:
                  example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_policies_patch_request.json
                responses:
                  200:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_policies_patch_response.json
                  400:
                    body:
                      application/json:
                        example: |
                          {
                            "name": "InvalidOperationError",
                            "message": "The policies with ID 3 cannot be ordered."
                          }

              /{policyId}:
                description: An API version policy.
                type: policyCollectionItem
                uriParameters:
                  policyId:
                    type: integer
                    minimum: 1
                    maximum: 2147483647
                patch:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_policies_post_patch_request.json
                  responses:
                    200:
                      body:
                        application/json:

                /disable:
                  description: Disables a policy for a the given API version.
                  post:
                    responses:
                      201:
                        body:
                          application/json:
                            example: !include examples/apis_apiId_versions_versionId_policies_disable.json
                      400:
                      404:

                /enable:
                  description: Enables a policy for a the given API version.
                  post:
                    responses:
                      201:
                        body:
                          application/json:
                            example: !include examples/apis_apiId_versions_versionId_policies_enable.json
                      400:
                      404:

            /tags:
              description: Manages an API version tags.

              /{tag}:
                uriParameters:
                  tag:
                    maxLength: 150
                post:
                  description: Adds a tag to an API version.
                  responses:
                    201:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_tags_post_response.json
                delete:
                  description: Removes a tag from an API version.
                  responses:
                    204:

            /tiers:
              description: Manages API version tiers.
              get:
                description: Retrieves a list of tiers for the supplied api version.
                is: [ searchable ]
                queryParameters:
                  active:
                    description: Retrieve only active tiers if set to true.
                    type: boolean
                responses:
                  200:
                    description: Successful.
                    body:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_tiers_get_request.json
              post:
                description: Creates a sla tier for the API version.
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_tiers_post_put_request.json
                responses:
                  201:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_tiers_post_response.json

              /{tierId}:
                description: A particular tier associated with the API version.
                put:
                  description: Update a tier associated with an API version.
                  body:
                    #schema: newTier
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_tiers_post_put_request.json
                  responses:
                    200:
                      description: The tier has been successfully updated.
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_tiers_tierId_put_request.json
                delete:
                  description: Delete a tier that has no active applications.
                  responses:
                    204:
                      description: The tier has been deleted.

            /contracts:
              description: Contracts associated with the API version.
              get:
                description: Retrieves a list of applications with contracts with the API version.
                is: [ searchable ]
                queryParameters:
                  includeExtraApplicationData:
                    type: boolean
                  includeExtraRedirections:
                    type: boolean
                  coreServicesId:
                    type: string
                  status:
                    type: string
                responses:
                  200:
                    body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_get_response.json

              /{contractId}:
                description: A particular contract associated with the API version.
                get:
                  description: Retrieves a specific contract for the API version.
                  responses:
                    200:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_contractId_get_patch_response.json
                patch:
                  description: Patches contract conditions.
                  body:
                    #schema: patchContract
                    example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_contractId_patch_request.json
                  responses:
                    200:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_contractId_get_patch_response.json
                delete:
                  description: Deletes contract.
                  responses:
                    204:
                      description: Contract deleted.

                /approveTierChange:
                  description: Approves contract tier change request.
                  post:
                    body:
                        application/json:
                          example:  |
                            {}
                    responses:
                      201:
                        body:
                          application/json:
                            example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_contractId_approve_tier_change_post_response.json

                /approve:
                  description: Approves contract.
                  post:
                    body:
                      application/json:
                        example:  |
                            {}
                    responses:
                      201:
                        body:
                          application/json:
                            example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_contractId_get_patch_response.json

                /reject:
                  description: Rejects contract.
                  post:
                    body:
                      application/json:
                        example:  |
                            {}
                    responses:
                      201:
                        body:
                          application/json:
                            example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_contractId_get_patch_response.json

                /rejectTierChange:
                  description: Rejects contract tier change request.
                  post:
                    body:
                      application/json:
                        example:  |
                            {}
                    responses:
                      201:
                        body:
                          application/json:
                            example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_contractId_reject_tier_change_post_response.json

                /restore:
                  description: Restores contract.
                  post:
                    body:
                      application/json:
                        example:  |
                            {}
                    responses:
                      201:
                        body:
                          application/json:
                            example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_contractId_get_patch_response.json

                /revoke:
                  post:
                    body:
                      application/json:
                        example:  |
                            {}
                    responses:
                      201:
                        body:
                          application/json:
                            example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_contracts_contractId_get_patch_response.json

            /proxy:
              description: Gets a proxy.
              get:
                description: Gets a proxy.
                queryParameters:
                  gatewayVersion:
                    type: string
                    default: 1.3.0
                responses:
                  200:
                    body:
                      application/zip:

              /deployment:
                post:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_proxy_deployment_post_request.json
                  responses:
                    201:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_proxy_deployment_post_response.json
                patch:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_proxy_deployment_post_request.json
                  responses:
                    200:
                      body:
                        application/json:
                          example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_proxy_deployment_post_response.json

                /status:
                  get:
                    description: Retrieves the deployment details of a version.
                    responses:
                      200:
                        body:
                          application/json:
                            example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_proxy_deployment_status_get_response.json

    /policy-templates:
      description: |
        Policy Templates are the basis for creating new policies.
        The platform provides out of the box with several policies and new
        ones can be added by MuleSoft Support Team if needed.
      get:
        description: Retrieve a list of policy templates.
        queryParameters:
          version:
            type: string
        responses:
          200:
            description: Successful.
            body:
              example: !include examples/organizations_policies_templates_get_response.json
          400:
            description: Bad Request.
          406:
            description: The requested accept type is not supported.
          500:
            description: An unknown error occurred.

      /{policyTemplateId}:
        uriParameters:
          policyTemplateId:
            type: integer
            minimum: 1
            maximum: 2147483647
        get:
          description: |
            Retrieve specific details from the policy template, including the full
            XML that is being injected as well as all of its configuration parameters.
          queryParameters:
            version:
              type: string
          responses:
            200:
              description: Successful.
              body:
                example: |
                  {
                    "name": "HTTP Basic Authentication",
                    "description": "All service calls must include security credentials that match those specified in the policy.",
                    "template": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<policy xmlns=\"http://www.mulesoft.org/schema/mule/policy\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xmlns:mule-ss=\"http://www.mulesoft.org/schema/mule/spring-security\"\n        xsi:schemaLocation=\"http://www.mulesoft.org/schema/mule/policy http://www.mulesoft.org/schema/mule/policy/current/mule-policy.xsd\n              http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd\"></policy>",
                    "category": "Security",
                    "type": "system",
                    "providedCharacteristics": [
                      "Requires Authentication"
                    ],
                    "requiredCharacteristics": [
                      "Security Manager"
                    ],
                    "configuration": []
                  }
            400:
              description: Bad Request.
            404:
              description: There is no policy template defined under the specified id.
            406:
              description: The requested accept type is not supported.
            500:
              description: An unknown error occurred.

    /custom-policy-templates:
      description: |
        Custom Policy Templates are the basis for creating new policies.
        The platform provides out of the box with several policies and new
        ones can be added using this API.

      get:
        description: Retrieves a list of custom policy templates.
        is: [ searchable ]
        responses:
          200:
            body:
              application/json:
                example: !include examples/organizations_organizationId_custom_policy_templates_get_response.json

      post:
        description: Creates a new custom policy.
        body:
          multipart/form-data:
            example: !include examples/organizations_organizationId_custom_policy_templates_post_request.json
        responses:
          201:
            body:
              application/json:
                example: !include examples/organizations_organizationId_custom_policy_templates_post_response.json

      /{customPolicyTemplateId}:
        description: A custom policy template.
        uriParameters:
          customPolicyTemplateId:
            type: integer
            minimum: 1
            maximum: 2147483647

        get:
          responses:
           200:
            body:
             application/json:
               example: !include examples/organizations_organizationId_custom_policy_templates_templateId_get_response.json

        delete:
          description: Deletes the custom policy template specified
          responses:
            204:
             description: The custom policy template has been deleted successfully

        /configuration:
          get:
            description: The XML configuration for the custom policy template.
            responses:
              200:
                body:
                  application/xml:
                    example: !include examples/organizations_organizationId_custom_policy_templates_templateId_configuration_get_response.xml

        /definition:
          get:
            description: The YAML definition for the custom policy template.
            responses:
              200:
                body:
                  application/yaml:

    /portals:
      description: A collection of API portals within organization.
      type:
        collection:
          baseType: baseCollection
      get:
        responses:
          200:
            body:
              application/json:
                example: !include examples/organizations_organizationId_portals_get_response.json

    /users:
      description: |
        Proxy for core services that return organization users.
      get:
        description: Search for users
        queryParameters:
          search:
            type: string
            description: The search string to query users for.
          includeCurrent:
            type: boolean
            description: Whether to include the currently logged-in user in the search results or not.
        responses:
          200:
            body:
              application/json:
                example: !include examples/organizations_organizationId_users_get_response.json

    /applications:
      description: A collection of applications that consume APIs via contracts.
      type:
        collection:
          baseType: baseCollection
      get:
        description: Retrieves a list of applications.
        is: [ searchable ]
        queryParameters:
          targetAdminSite:
            type: boolean
            description: Retrieve applications with all the information needed for the admin site.
        responses:
          200:
            body:
              application/json:
                example: !include examples/organizations_organizationId_applications_get_response.json
                #schema: newApplication
      post:
        body:
          application/json:
            example: !include examples/organizations_organizationId_applications_post_request.json
        responses:
          201:
            body:
              application/json:
                example: !include examples/organizations_organizationId_applications_post_response.json

      /{applicationId}:
        description: An application.
        type: collectionItem
        uriParameters:
          applicationId:
            type: string
            required: true
            description: API Manager application ID (or a Core Services client ID **e.g. 68ef9520-24e9-4cf2-b2f5-620025690913** for GET requests).
        get:
          queryParameters:
            ignoreOwners:
              type: boolean
              description: Retrieve application with or without owners information.
          responses:
            200:
              body:
                application/json:
                  example: !include examples/organizations_organizationId_applications_aplicationId_get_response.json

        /secret/reset:
          description: Resets client secret for application. (No payload required)
          post:
            body:
              application/json:
                example: |
                    {}
            responses:
              201:
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_applications_applicationId_secret_reset_post_response.json

        /party-ids:
          description: Party Ids associated with the application.
          get:
            description: Retrieves a list of Party Ids for a specific api version.
            queryParameters:
              apiVersionId:
                type: integer
                required: true
            responses:
              200:

        /owners:
          post:
            description: Adds an owner to an existing application.
            body:
              example: |
                {
                  "id": "36d6f025-cdd9-4c06-9320-7dccb1f13db2"
                }
            responses:
              201:
              404:
                description: The application cannot be found.

          /{userId}:
            delete:
              description: Removes an owner from an existing application.
              responses:
                204:
                404:
                  description: The application cannot be found.

        /contracts:
          description: Contracts associated with the application.
          type:
            collection:
              baseType: baseCollection
          get:
            description: Retrieves a list of applications with contracts with the application.
            is: [ searchable ]
            responses:
              200:
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_applications_aplicationId_contracts_get_response.json
          post:
            description: Creates new contract between an API version and the application.
            body:
              application/json:
                example: !include examples/organizations_organizationId_applications_aplicationId_contracts_post_request.json
            responses:
              201:
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_applications_aplicationId_contracts_post_response.json

          /{contractId}:
            description: A particular contract associated with the application.
            patch:
              description: Patches contract conditions.
              body:
                #schema: patchContract
              responses:
                200:

    /contracts:
      get:
        queryParameters:
          apiVersionId:
            type: integer
            required: true
          coreServicesId:
            type: string
            required: true
        responses:
          200:

    /deployment-targets:
      description: A collection of deploy targets for Hybrid deploymentTargets.
      get:
        responses:
          200:

    /bundles:
      post:
        body:
          application/zip:
          application/x-gzip:
        responses:
          201:

    /public:
      /theme:
        /logo:
          get:
            responses:
              200:

        /favicon:
          get:
            responses:
              200:

      /permissions:
        description: A list of available permissions.
        get:
          responses:
            200:
              body:
                application/json:
                  example: !include examples/organizations_organizationId_public_permissions_get_response.json

      /portals:
        description: |
          A collection of API portals within organization.
          When performing a search by passing in 'query=foo' as a string, it is equivalent to passing in the following combination: 'query[name]=foo&query[version]=foo&query[description]=foo&query[tags]=foo&query[matchAll]=false'.
        type: apiExtendedSearch
        get:
          responses:
            200:
              body:
                application/json:
                  example: !include examples/organizations_organizationId_public_portals_get_response.json

        /{portalId}:
          uriParameters:
            portalId:
              type: integer
              minimum: 1
              maximum: 2147483647

          /theme:
            /logo:
              get:
                responses:
                  200:

            /favicon:
              get:
                responses:
                  200:

        /terms:
          description: Portal terms for the organization.
          get:
            responses:
              200:
                body:
                  application/json:
                    example: !include examples/organizations_organizationId_public_portals_terms_get_response.json

          /acceptance:
            description: Accepted portal terms for current user.
            get:
              responses:
                200:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_public_portals_terms_acceptance_get_response.json

          /{portalTermsId}/acceptance:
            uriParameters:
              portalTermsId:
                type: integer
                minimum: 1
                maximum: 2147483647
            post:
              responses:
                201:

      /apis/{apiId}:
        description: An API.
        type: collectionItem
        uriParameters:
          apiId:
            type: integer
            minimum: 1
            maximum: 2147483647

        /versions/{apiVersionId}:
          description: An API version.
          type: collectionItem
          uriParameters:
            apiVersionId:
              type: integer
              minimum: 1
              maximum: 2147483647

          /portal:
            get:
              responses:
                200:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_public_apis_apiId_versions_apiVersionId_portal_get_response.json

            /pages/{pageId}/widgets:
              get:
                responses:
                  200:
                    body:
                      application/json:
                        example: !include examples/organizations_organizationId_public_apis_apiId_versions_apiVersionId_portal_pages_pageId_widgets_get_response.json

            /files/{fileId}:
              get:
                description: Retrieve the file by file id. Content-type will be set based on the content-type originally received.
                responses:
                  200:
                    description: Successful.
                  404:
                    description: Not Found.

              /{fileName}:
                get:
                  description: Same as parent get but allows to set a file name in the content-disposition header for downloading in a browser environment.
                  responses:
                    200:

          /tiers:
            get:
              responses:
                200:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_public_apis_apiId_versions_apiVersionId_tiers.json

          /definition:
            description: The fully resolved RAML spec for this version of the API.
            type: collectionItem
            get:
              description: Gets the RAML SPEC.
              responses:
                200:
                  body:
                    application/json:
                      example: !include examples/organizations_organizationId_apis_apiId_versions_versionId_definition_get_response.json

          /files:
            description: Serves RAML files for the portal.
            get:
              description: Redirect to the root RAML file.
              responses:
                302:
                  description: Temporary redirect to the root RAML file.
                404:
                  description: No RAML file found.

            /root:
              get:
                description: Retrieve the root RAML file contents.
                responses:
                  200:
                    body:
                      text/plain:
                        example: |
                          "#%RAML 1.0
                          title: raml-service
                          version: 0.5
                          #baseUri: http://www.mockdomain.com
                          baseUri: https://mocksvc.mulesoft.com/mocks/520bfa5a-9afb-47b6-a770-5f86a890170e
                          types:
                            Career:
                              properties:
                                title:
                                  type: string

                          /careers:
                            get:
                              description: Get all careers
                              responses:
                                200:
                                  body:
                                    application/json:
                                      type: Career[]
                                      example: |
                                        [{"title":"Scrum Master"}, {"title":"Architect Software Engineer"}, {"title":"Lead SDET"}]
                  302:
                    description: Temporary redirect to the root RAML file.
                  404:
                    description: Not Found."

            /{fileName}:
              get:
                description: Retrieve the RAML contents by file name.
                responses:
                  200:
                    description: Successful.
                    body:
                      text/plain:
                        example: |
                          "#%RAML 1.0
                          title: raml-service
                          version: 0.5
                          #baseUri: http://www.mockdomain.com
                          baseUri: https://mocksvc.mulesoft.com/mocks/520bfa5a-9afb-47b6-a770-5f86a890170e
                          types:
                            Career:
                              properties:
                                title:
                                  type: string

                          /careers:
                            get:
                              description: Get all careers
                              responses:
                                200:
                                  body:
                                    application/json:
                                      type: Career[]
                                      example: |
                                        [{"title":"Scrum Master"}, {"title":"Architect Software Engineer"}, {"title":"Lead SDET"}]
                  404:
                    description: Not Found."

/policies:
  /{policyId}:
    description: A policy.
    uriParameters:
      policyId:
        type: integer
        minimum: 1
        maximum: 2147483647
    get:
      responses:
        200:
          body:
            example: |
              {
                "audit": {
                  "created": {
                    "date": "2014-09-22T14:15:23.238Z"
                  },
                  "updated": {
                  }
                },
                "organizationId": 1,
                "id": 1,
                "apiVersionId": 10,
                "policyTemplateId": "1",
                "configurationData": {
                  "username": "asd"
                },
                "template": {
                  "id": 1,
                  "name": "Custom Policy Template 1 v1",
                  "description": "Provides a custom security manager that can authenticate only a single user.",
                  "category": "Security",
                  "type": "custom",
                  "standalone": false,
                  "requiresConnectivity": false,
                  "providedCharacteristics": [
                    "Security manager"
                  ],
                  "requiredCharacteristics": [
                  ],
                  "configuration": [
                    {
                      "propertyName": "username",
                      "name": "Username",
                      "description": null,
                      "type": "string",
                      "optional": false,
                      "sensitive": false,
                      "allowMultiple": false
                    },
                    {
                      "propertyName": "password",
                      "name": "Password",
                      "description": null,
                      "type": "string",
                      "optional": false,
                      "sensitive": true,
                      "allowMultiple": false
                    }
                  ],
                  "custom": true
                },
                "type": "custom"
              }

/ch-domains/{domainName}:
  description: Returns information about the availability desired CH domain.
  get:
    responses:
      200:
        body:
          application/json:
            example: !include examples/ch-domains_get_response.json
